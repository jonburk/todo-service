version: 0.2

env:
  parameter-store:
    TASK_LIST_URI: /CodeBuild/TaskList/Prod/serviceUri
    TASK_LIST_PORT: /CodeBuild/TaskList/Prod/servicePort

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Build started on `date`
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo Running npm install...
      - npm install
      - echo Running service tests
      - npm run test-cicd
      - echo Running UI install...
      - cd $CODEBUILD_SRC_DIR_UISourceArtifact
      - npm install
      - echo Running UI tests...
      - npm test
      - echo Creating UI config files...
      - node writeconfig.js ./config/prod.json
  build:
    commands:      
      - echo Building UI...
      - npm run build
      - cd $CODEBUILD_SRC_DIR
      - cp -a $CODEBUILD_SRC_DIR_UISourceArtifact/dist static
      - echo Building Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Publishing Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"task-list","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Build completed on `date`

artifacts:
  files: imagedefinitions.json

